---
import type { SEOProps } from '~/types';
import favIconSVG from '~/assets/favicon.svg';
import favIconPNG from '~/assets/favicon.png';
import socialPNG from '~/assets/social.png';
import { getImage } from 'astro:assets';

export type Props = SEOProps

const props = { ...Astro.props } as Props;

/* ———————————————————————————————————————————— Typeguards + Fallbacks —————— */
if (typeof props.siteName !== 'string') {
  props.siteName = undefined;
}
if (typeof props.title !== 'string') {
  props.title = undefined;
}
if (typeof props.description !== 'string') {
  props.description = undefined;
}
if (typeof props.image !== 'string') {
  const socialImage = await getImage({
    src: socialPNG,
    height: 630,
    width: 1200,
    format: 'png',
  });
  props.image = socialImage.src;
}
if (typeof props.favicon !== 'boolean') {
  const faviconSvg = await getImage({
    src: favIconSVG,
    format: 'svg',
  });
  props.favicon = true;
  props.faviconSvg = faviconSvg.src;
}
if (typeof props.appleTouchIcon !== 'string') {
  const appleTouchIcon = await getImage({
    src: favIconPNG,
    format: 'png',
    width: 180,
    height: 180,
  });
  props.appleTouchIcon = appleTouchIcon.src;
}
if (typeof props.appleTouchIcon !== 'string') {
  props.appleTouchIcon = undefined;
}
if (typeof props.author !== 'string') {
  props.author = undefined;
}
if (typeof props.copyright !== 'string') {
  props.copyright = undefined;
}
if (typeof props.astroSitemap !== 'boolean') {
  props.astroSitemap = true;
}
if (typeof props.astroGenerator !== 'boolean') {
  props.astroGenerator = true;
}
if (typeof props.viewport !== 'string') {
  props.viewport = 'width=device-width';
}
if (typeof props.canonicalUrl !== 'string') {
  props.canonicalUrl = import.meta.env.SITE
    ? import.meta.env.SITE + Astro.url.pathname.replace(/\.html$/, '')
    : Astro.url.toString();
}
if (typeof props.type !== 'string') {
  props.type = undefined;
}
/* —————————————————————————————————————————————————————————————————————————— */
---

<!-- SEO -->
<link rel="canonical" href={props.canonicalUrl} />

<meta property="og:type" content={props.type || 'website'} />
{props.viewport && <meta name="viewport" content={props.viewport} />}

{
  props.siteName && (
    <>
      <meta name="apple-mobile-web-app-title" content={props.siteName} />
      <meta property="og:site_name" content={props.siteName} />
    </>
  )
}

{props.title && <title>{props.title}</title>}
{
  /* 
    HACK: Bug w. Astro parser (1.9.0), we must put title outside the group below
    It hangs even between JSX / HTML comments
  */
}
{
  props.title && (
    <>
      <meta property="og:title" content={props.title} />
      <meta name="twitter:title" content={props.title} />
    </>
  )
}

{
  props.description && (
    <>
      <meta property="og:image:alt" content={props.description} />
      <meta name="description" property="og:description" content={props.description} />
      <meta name="twitter:description" content={props.description} />
    </>
  )
}

{
  props.image && (
    <>
      <meta property="og:image" content={props.image} />
      <meta name="twitter:image:src" content={props.image} />
      <meta name="twitter:card" content={'summary_large_image'} />
    </>
  )
}

{
  props.favicon && (
    <>
      <link rel="icon" href="/favicon.ico" sizes="32x32" />
      <link rel="icon" href={props.faviconSvg} type="image/svg+xml" />
    </>
  )
}
{props.appleTouchIcon && <link rel="apple-touch-icon" href={props.appleTouchIcon} />}

<!-- | -->

{props.author && <meta name="author" content={props.author} />}

{props.copyright && <meta name="copyright" content={props.copyright} />}

<!-- | -->

{props.astroSitemap && <link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />}

{props.astroGenerator && <meta name="generator" content={Astro.generator} />}

<!-- /SEO -->
